CREATE TABLE td_track_album (id BIGINT AUTO_INCREMENT, name VARCHAR(128) NOT NULL, author VARCHAR(128) NOT NULL, place VARCHAR(128), released_at DATETIME, description LONGTEXT, file_cover VARCHAR(255), active TINYINT(1) DEFAULT '1' NOT NULL, type VARCHAR(255), is_for_single TINYINT(1) DEFAULT '0', artist_id BIGINT, product_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX artist_id_idx (artist_id), INDEX product_id_idx (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE album_musical_gender (album_id BIGINT, musical_gender_id BIGINT, PRIMARY KEY(album_id, musical_gender_id)) ENGINE = INNODB;
CREATE TABLE album_track (album_id BIGINT, track_id BIGINT, PRIMARY KEY(album_id, track_id)) ENGINE = INNODB;
CREATE TABLE td_article (id BIGINT AUTO_INCREMENT, title VARCHAR(128) NOT NULL, author_id BIGINT NOT NULL, text LONGTEXT NOT NULL, image VARCHAR(255), active TINYINT(1) DEFAULT '1' NOT NULL, type VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX author_id_idx (author_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE artist (id BIGINT AUTO_INCREMENT, sf_guard_user_id BIGINT, deevo_theme_id BIGINT, artistname VARCHAR(100) NOT NULL, hometown VARCHAR(100) NOT NULL, nationality VARCHAR(100), website VARCHAR(100), facebook_address VARCHAR(100), twitter_address VARCHAR(100), date_of_early_career VARCHAR(100), number_of_album VARCHAR(100), number_of_title VARCHAR(100), resume LONGTEXT, detail LONGTEXT, creation_date_of_the_account DATE, photo_biography VARCHAR(255), INDEX sf_guard_user_id_idx (sf_guard_user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE artist_musical_gender (artist_id BIGINT, musical_gender_id BIGINT, PRIMARY KEY(artist_id, musical_gender_id)) ENGINE = INNODB;
CREATE TABLE artist_musical_instrument (artist_id BIGINT, musical_instrument_id BIGINT, PRIMARY KEY(artist_id, musical_instrument_id)) ENGINE = INNODB;
CREATE TABLE sfCartCategory (id BIGINT AUTO_INCREMENT, name VARCHAR(80) NOT NULL, active TINYINT(1), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, slug VARCHAR(255), root_id BIGINT, lft INT, rgt INT, level SMALLINT, UNIQUE INDEX sfCartCategory_sluggable_idx (slug), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE comment (id BIGINT AUTO_INCREMENT, record_model VARCHAR(255) NOT NULL, record_id BIGINT NOT NULL, author_name VARCHAR(255) NOT NULL, author_email VARCHAR(255), author_website VARCHAR(255), body LONGTEXT NOT NULL, is_delete TINYINT(1) DEFAULT '0', edition_reason LONGTEXT, reply BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX record_model_record_id_idx (record_model, record_id), INDEX reply_idx (reply), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE comment_report (id BIGINT AUTO_INCREMENT, reason LONGTEXT NOT NULL, referer VARCHAR(255), state VARCHAR(255) DEFAULT 'untreated', id_comment BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX id_comment_idx (id_comment), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE sfCartCoupon (id BIGINT AUTO_INCREMENT, code VARCHAR(20) NOT NULL, discount DOUBLE(18, 2) DEFAULT 0 NOT NULL, start datetime, end datetime, active TINYINT(1) DEFAULT '1' NOT NULL, minprice DOUBLE(18, 2) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE deevo_theme (id BIGINT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, theme_file VARCHAR(255) NOT NULL, theme_image VARCHAR(255) NOT NULL, product_id BIGINT NOT NULL, INDEX product_id_idx (product_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE deevo_theme_user (id BIGINT AUTO_INCREMENT, sf_guard_user_id BIGINT NOT NULL, deevo_theme_id BIGINT NOT NULL, INDEX deevo_theme_id_idx (deevo_theme_id), INDEX sf_guard_user_id_idx (sf_guard_user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_profile (id BIGINT AUTO_INCREMENT, user_id BIGINT UNIQUE NOT NULL, email_new VARCHAR(255) UNIQUE, firstname VARCHAR(255), lastname VARCHAR(255), validate_at DATETIME, validate VARCHAR(33), type VARCHAR(255), gender VARCHAR(10) NOT NULL, culture VARCHAR(255) DEFAULT 'fr' NOT NULL, country VARCHAR(255) NOT NULL, way VARCHAR(255) NOT NULL, additional_address VARCHAR(255) NOT NULL, zip_code VARCHAR(255) NOT NULL, city VARCHAR(255) NOT NULL, date_of_birth DATE NOT NULL, phone_number BIGINT NOT NULL, profile_photo VARCHAR(255), favorite_movie_1 VARCHAR(100), favorite_movie_2 VARCHAR(100), favorite_movie_3 VARCHAR(100), favorite_artist_1 VARCHAR(100), favorite_artist_2 VARCHAR(100), favorite_artist_3 VARCHAR(100), favorite_music_genre_1 VARCHAR(100), favorite_music_genre_2 VARCHAR(100), favorite_music_genre_3 VARCHAR(100), size_of_storage_space BIGINT DEFAULT 0, facebook_uid BIGINT, email_hash VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX validate_idx (validate), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id BIGINT AUTO_INCREMENT, first_name VARCHAR(255), last_name VARCHAR(255), email_address VARCHAR(255) NOT NULL UNIQUE, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, type VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE musical_gender (id BIGINT AUTO_INCREMENT, libelle VARCHAR(100), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE musical_instrument (id BIGINT AUTO_INCREMENT, libelle VARCHAR(100), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sfCartProduct (id BIGINT AUTO_INCREMENT, name VARCHAR(100) NOT NULL, code VARCHAR(100), description TEXT, weight DOUBLE(18, 2), photo_path TEXT, quantity BIGINT NOT NULL, price DOUBLE(18, 2) NOT NULL, saleprice DOUBLE(18, 2), active TINYINT(1) DEFAULT '1', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, slug VARCHAR(255), UNIQUE INDEX sfCartProduct_sluggable_idx (slug), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE product_index (keyword VARCHAR(200), field VARCHAR(50), position BIGINT, id BIGINT, PRIMARY KEY(keyword, field, position, id)) ENGINE = INNODB;
CREATE TABLE sfCartProductCategory (product_id BIGINT, category_id BIGINT, PRIMARY KEY(product_id, category_id)) ENGINE = INNODB;
CREATE TABLE sfSettings (id BIGINT AUTO_INCREMENT, name VARCHAR(100) NOT NULL, value VARCHAR(100) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sfCartTax (id BIGINT AUTO_INCREMENT, region_code VARCHAR(80) NOT NULL, rate DOUBLE(18, 2) DEFAULT 0 NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE td_track (id BIGINT AUTO_INCREMENT, td_track_album_id BIGINT NOT NULL, file VARCHAR(255) NOT NULL, title VARCHAR(64) NOT NULL, description LONGTEXT, position tinyint NOT NULL, type VARCHAR(255), artist_id BIGINT, product_id BIGINT NOT NULL, composer VARCHAR(100), lyricist VARCHAR(100), interpreter VARCHAR(100), producer VARCHAR(100), place_of_registration VARCHAR(100), photo_track VARCHAR(100), active TINYINT(1) DEFAULT '1' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX unique_album_track_position_idx (td_track_album_id, position), INDEX artist_id_idx (artist_id), INDEX product_id_idx (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE track_musical_gender (track_id BIGINT, musical_gender_id BIGINT, PRIMARY KEY(track_id, musical_gender_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_forgot_password (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, unique_key VARCHAR(255), expires_at DATETIME NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id BIGINT AUTO_INCREMENT, user_id BIGINT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id BIGINT AUTO_INCREMENT, first_name VARCHAR(255), last_name VARCHAR(255), email_address VARCHAR(255) NOT NULL UNIQUE, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, type VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), INDEX sf_guard_user_type_idx (type), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id BIGINT, group_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_profile (id BIGINT AUTO_INCREMENT, user_id BIGINT UNIQUE NOT NULL, email_new VARCHAR(255) UNIQUE, firstname VARCHAR(255), lastname VARCHAR(255), validate_at DATETIME, validate VARCHAR(33), type VARCHAR(255), gender VARCHAR(10) NOT NULL, culture VARCHAR(255) DEFAULT 'fr' NOT NULL, country VARCHAR(255) NOT NULL, way VARCHAR(255) NOT NULL, additional_address VARCHAR(255) NOT NULL, zip_code VARCHAR(255) NOT NULL, city VARCHAR(255) NOT NULL, date_of_birth DATE NOT NULL, phone_number BIGINT NOT NULL, profile_photo VARCHAR(255), favorite_movie_1 VARCHAR(100), favorite_movie_2 VARCHAR(100), favorite_movie_3 VARCHAR(100), favorite_artist_1 VARCHAR(100), favorite_artist_2 VARCHAR(100), favorite_artist_3 VARCHAR(100), favorite_music_genre_1 VARCHAR(100), favorite_music_genre_2 VARCHAR(100), favorite_music_genre_3 VARCHAR(100), size_of_storage_space BIGINT DEFAULT 0, facebook_uid BIGINT, email_hash VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX validate_idx (validate), INDEX sf_guard_user_profile_type_idx (type), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE td_article (id BIGINT AUTO_INCREMENT, title VARCHAR(128) NOT NULL, author_id BIGINT NOT NULL, text LONGTEXT NOT NULL, image VARCHAR(255), active TINYINT(1) DEFAULT '1' NOT NULL, type VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX td_article_type_idx (type), INDEX author_id_idx (author_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE td_config (id BIGINT AUTO_INCREMENT, name VARCHAR(64) NOT NULL, value TEXT NOT NULL, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX name_unique_idx (name), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE td_link (id BIGINT AUTO_INCREMENT, url VARCHAR(255) NOT NULL, description TEXT NOT NULL, active TINYINT(1) DEFAULT '1' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX active_index_idx (active), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE td_subpage (id BIGINT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, content TEXT NOT NULL, active TINYINT(1) DEFAULT '1' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, slug VARCHAR(255), UNIQUE INDEX td_subpage_sluggable_idx (slug), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE td_track (id BIGINT AUTO_INCREMENT, td_track_album_id BIGINT NOT NULL, file VARCHAR(255) NOT NULL, title VARCHAR(64) NOT NULL, description LONGTEXT, position tinyint NOT NULL, type VARCHAR(255), artist_id BIGINT, product_id BIGINT NOT NULL, composer VARCHAR(100), lyricist VARCHAR(100), interpreter VARCHAR(100), producer VARCHAR(100), place_of_registration VARCHAR(100), photo_track VARCHAR(100), active TINYINT(1) DEFAULT '1' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX unique_album_track_position_idx (td_track_album_id, position), INDEX td_track_type_idx (type), INDEX td_track_album_id_idx (td_track_album_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE td_track_album (id BIGINT AUTO_INCREMENT, name VARCHAR(128) NOT NULL, author VARCHAR(128) NOT NULL, place VARCHAR(128), released_at DATETIME, description LONGTEXT, file_cover VARCHAR(255), active TINYINT(1) DEFAULT '1' NOT NULL, type VARCHAR(255), is_for_single TINYINT(1) DEFAULT '0', artist_id BIGINT, product_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX td_track_album_type_idx (type), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
ALTER TABLE td_track_album ADD CONSTRAINT td_track_album_product_id_sfCartProduct_id FOREIGN KEY (product_id) REFERENCES sfCartProduct(id);
ALTER TABLE td_track_album ADD CONSTRAINT td_track_album_artist_id_artist_id FOREIGN KEY (artist_id) REFERENCES artist(id);
ALTER TABLE album_musical_gender ADD CONSTRAINT album_musical_gender_musical_gender_id_musical_gender_id FOREIGN KEY (musical_gender_id) REFERENCES musical_gender(id) ON DELETE CASCADE;
ALTER TABLE album_musical_gender ADD CONSTRAINT album_musical_gender_album_id_td_track_album_id FOREIGN KEY (album_id) REFERENCES td_track_album(id) ON DELETE CASCADE;
ALTER TABLE album_track ADD CONSTRAINT album_track_track_id_td_track_id FOREIGN KEY (track_id) REFERENCES td_track(id);
ALTER TABLE album_track ADD CONSTRAINT album_track_album_id_td_track_album_id FOREIGN KEY (album_id) REFERENCES td_track_album(id) ON DELETE CASCADE;
ALTER TABLE td_article ADD CONSTRAINT td_article_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE artist ADD CONSTRAINT artist_sf_guard_user_id_sf_guard_user_id FOREIGN KEY (sf_guard_user_id) REFERENCES sf_guard_user(id);
ALTER TABLE artist_musical_gender ADD CONSTRAINT artist_musical_gender_musical_gender_id_musical_gender_id FOREIGN KEY (musical_gender_id) REFERENCES musical_gender(id) ON DELETE CASCADE;
ALTER TABLE artist_musical_gender ADD CONSTRAINT artist_musical_gender_artist_id_artist_id FOREIGN KEY (artist_id) REFERENCES artist(id) ON DELETE CASCADE;
ALTER TABLE artist_musical_instrument ADD CONSTRAINT artist_musical_instrument_artist_id_artist_id FOREIGN KEY (artist_id) REFERENCES artist(id) ON DELETE CASCADE;
ALTER TABLE artist_musical_instrument ADD CONSTRAINT ammi FOREIGN KEY (musical_instrument_id) REFERENCES musical_instrument(id) ON DELETE CASCADE;
ALTER TABLE comment ADD CONSTRAINT comment_reply_comment_id FOREIGN KEY (reply) REFERENCES comment(id);
ALTER TABLE comment_report ADD CONSTRAINT comment_report_id_comment_comment_id FOREIGN KEY (id_comment) REFERENCES comment(id) ON DELETE CASCADE;
ALTER TABLE deevo_theme ADD CONSTRAINT deevo_theme_product_id_sfCartProduct_id FOREIGN KEY (product_id) REFERENCES sfCartProduct(id);
ALTER TABLE deevo_theme_user ADD CONSTRAINT deevo_theme_user_sf_guard_user_id_sf_guard_user_id FOREIGN KEY (sf_guard_user_id) REFERENCES sf_guard_user(id);
ALTER TABLE deevo_theme_user ADD CONSTRAINT deevo_theme_user_deevo_theme_id_deevo_theme_id FOREIGN KEY (deevo_theme_id) REFERENCES deevo_theme(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_profile ADD CONSTRAINT sf_guard_user_profile_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE product_index ADD CONSTRAINT product_index_id_sfCartProduct_id FOREIGN KEY (id) REFERENCES sfCartProduct(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE sfCartProductCategory ADD CONSTRAINT sfCartProductCategory_product_id_sfCartProduct_id FOREIGN KEY (product_id) REFERENCES sfCartProduct(id) ON DELETE CASCADE;
ALTER TABLE sfCartProductCategory ADD CONSTRAINT sfCartProductCategory_category_id_sfCartCategory_id FOREIGN KEY (category_id) REFERENCES sfCartCategory(id) ON DELETE CASCADE;
ALTER TABLE td_track ADD CONSTRAINT td_track_product_id_sfCartProduct_id FOREIGN KEY (product_id) REFERENCES sfCartProduct(id);
ALTER TABLE td_track ADD CONSTRAINT td_track_artist_id_artist_id FOREIGN KEY (artist_id) REFERENCES artist(id);
ALTER TABLE track_musical_gender ADD CONSTRAINT track_musical_gender_track_id_td_track_id FOREIGN KEY (track_id) REFERENCES td_track(id);
ALTER TABLE track_musical_gender ADD CONSTRAINT track_musical_gender_musical_gender_id_musical_gender_id FOREIGN KEY (musical_gender_id) REFERENCES musical_gender(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_forgot_password ADD CONSTRAINT sf_guard_forgot_password_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE td_track ADD CONSTRAINT td_track_td_track_album_id_td_track_album_id FOREIGN KEY (td_track_album_id) REFERENCES td_track_album(id);
