<?php

/**
 * BaseCategory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property boolean $active
 * @property Category $Categories
 * @property Doctrine_Collection $Category
 * @property Doctrine_Collection $Products
 * @property Doctrine_Collection $ProductCategory
 * 
 * @method string              getName()            Returns the current record's "name" value
 * @method boolean             getActive()          Returns the current record's "active" value
 * @method Category            getCategories()      Returns the current record's "Categories" value
 * @method Doctrine_Collection getCategory()        Returns the current record's "Category" collection
 * @method Doctrine_Collection getProducts()        Returns the current record's "Products" collection
 * @method Doctrine_Collection getProductCategory() Returns the current record's "ProductCategory" collection
 * @method Category            setName()            Sets the current record's "name" value
 * @method Category            setActive()          Sets the current record's "active" value
 * @method Category            setCategories()      Sets the current record's "Categories" value
 * @method Category            setCategory()        Sets the current record's "Category" collection
 * @method Category            setProducts()        Sets the current record's "Products" collection
 * @method Category            setProductCategory() Sets the current record's "ProductCategory" collection
 * 
 * @package    deevox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCategory extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sfCartCategory');
        $this->hasColumn('name', 'string', 80, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 80,
             ));
        $this->hasColumn('active', 'boolean', null, array(
             'type' => 'boolean',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Category as Categories', array(
             'local' => 'id',
             'foreign' => 'root_id'));

        $this->hasMany('Category', array(
             'local' => 'root_id',
             'foreign' => 'id'));

        $this->hasMany('Product as Products', array(
             'refClass' => 'ProductCategory',
             'local' => 'category_id',
             'foreign' => 'product_id'));

        $this->hasMany('ProductCategory', array(
             'local' => 'id',
             'foreign' => 'category_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             'unique' => true,
             ));
        $nestedset0 = new Doctrine_Template_NestedSet(array(
             'hasManyRoots' => true,
             'rootColumnName' => 'root_id',
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
        $this->actAs($nestedset0);
    }
}