<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('MusicalInstrument', 'doctrine');

/**
 * BaseMusicalInstrument
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $libelle
 * @property Doctrine_Collection $Artist
 * @property Doctrine_Collection $ArtistsMusicalInstruments
 * 
 * @method string              getLibelle()                   Returns the current record's "libelle" value
 * @method Doctrine_Collection getArtist()                    Returns the current record's "Artist" collection
 * @method Doctrine_Collection getArtistsMusicalInstruments() Returns the current record's "ArtistsMusicalInstruments" collection
 * @method MusicalInstrument   setLibelle()                   Sets the current record's "libelle" value
 * @method MusicalInstrument   setArtist()                    Sets the current record's "Artist" collection
 * @method MusicalInstrument   setArtistsMusicalInstruments() Sets the current record's "ArtistsMusicalInstruments" collection
 * 
 * @package    deevox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMusicalInstrument extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('musical_instrument');
        $this->hasColumn('libelle', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Artist', array(
             'refClass' => 'ArtistMusicalInstrument',
             'local' => 'musical_instrument_id',
             'foreign' => 'artist_id'));

        $this->hasMany('ArtistMusicalInstrument as ArtistsMusicalInstruments', array(
             'local' => 'id',
             'foreign' => 'musical_instrument_id'));
    }
}