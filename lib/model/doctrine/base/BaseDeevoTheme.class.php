<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('DeevoTheme', 'doctrine');

/**
 * BaseDeevoTheme
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $theme_file
 * @property string $theme_image
 * @property integer $product_id
 * @property Product $Product
 * @property Doctrine_Collection $User
 * @property Doctrine_Collection $DeevoThemeUsers
 * 
 * @method string              getName()            Returns the current record's "name" value
 * @method string              getThemeFile()       Returns the current record's "theme_file" value
 * @method string              getThemeImage()      Returns the current record's "theme_image" value
 * @method integer             getProductId()       Returns the current record's "product_id" value
 * @method Product             getProduct()         Returns the current record's "Product" value
 * @method Doctrine_Collection getUser()            Returns the current record's "User" collection
 * @method Doctrine_Collection getDeevoThemeUsers() Returns the current record's "DeevoThemeUsers" collection
 * @method DeevoTheme          setName()            Sets the current record's "name" value
 * @method DeevoTheme          setThemeFile()       Sets the current record's "theme_file" value
 * @method DeevoTheme          setThemeImage()      Sets the current record's "theme_image" value
 * @method DeevoTheme          setProductId()       Sets the current record's "product_id" value
 * @method DeevoTheme          setProduct()         Sets the current record's "Product" value
 * @method DeevoTheme          setUser()            Sets the current record's "User" collection
 * @method DeevoTheme          setDeevoThemeUsers() Sets the current record's "DeevoThemeUsers" collection
 * 
 * @package    deevox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDeevoTheme extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('deevo_theme');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('theme_file', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('theme_image', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('product_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Product', array(
             'local' => 'product_id',
             'foreign' => 'id'));

        $this->hasMany('sfGuardUser as User', array(
             'refClass' => 'DeevoThemeUser',
             'local' => 'deevo_theme_id',
             'foreign' => 'sf_guard_user_id'));

        $this->hasMany('DeevoThemeUser as DeevoThemeUsers', array(
             'local' => 'id',
             'foreign' => 'deevo_theme_id'));
    }
}